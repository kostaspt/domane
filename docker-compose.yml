version: "3.8"

networks:
  internal:

volumes:
  grafana_data:
  prometheus_data:

services:
  proxy:
    image: haproxy:2.4-alpine
    restart: unless-stopped
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
    volumes:
      - ./docker/proxy:/usr/local/etc/haproxy:ro
    environment:
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:?}
      - API_PORT=${API_PORT:?}
      - CLIENT_PORT=${CLIENT_PORT:?}
      - DOMAIN=${DOMAIN:?}
    networks:
      - internal

  client:
    image: ghcr.io/kostaspt/domane-client:latest
    build: 
      context: ./client
      args:
        - DOMAIN=${DOMAIN:?}
    restart: unless-stopped
    environment:
      - CLIENT_PORT=${CLIENT_PORT:?}
      - DOMAIN=${DOMAIN:?}
      - NODE_ENV=production
    networks:
      - internal

  api:
    image: ghcr.io/kostaspt/domane-api:latest
    build: ./api
    restart: unless-stopped
    environment:
      - API_PORT=${API_PORT:?}
      - DOMAIN=${DOMAIN:?}
    networks:
      - internal

  prometheus:
    image: prom/prometheus:v2.27.1
    restart: unless-stopped
    volumes:
      - prometheus_data:/prometheus
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - internal

  grafana:
    image: grafana/grafana:8.0.1
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/custom.ini:/etc/grafana/grafana.ini
    networks:
      - internal
