global
    maxconn     1024
    log         127.0.0.1    local0 notice
    log         127.0.0.1    local1 notice

defaults
    log         global
    option      httplog
    option      forwardfor
    option      redispatch
    retries     3
    timeout     connect 10s
    timeout     client  1m
    timeout     server  2m
    timeout     check   10s

userlist basic-auth
    user admin password "${ADMIN_PASSWORD_HASH}"

frontend http_in
    mode            http
    bind            *:80

    compression     algo gzip
    compression     type text/html text/plain text/javascript application/javascript application/xml text/css

    acl             valid_host hdr(host) -i "${DOMAIN}"
    acl             is_auth http_auth(basic-auth)

    # Hide all /metrics urls
    acl             is_metrics path -i -m end /metrics
    http-request    deny if is_metrics

    # Prometheus
    acl             is_prometheus hdr(host) -i "prometheus.${DOMAIN}"
    use_backend     prometheus_backend if is_prometheus

    # Grafana
    acl             is_grafana hdr(host) -i "grafana.${DOMAIN}"
    use_backend     grafana_backend if is_grafana

    # API
    acl             is_api path -i -m beg /api
    use_backend     api_backend if valid_host is_api

    # Client (this should be the last one always)
    use_backend     client_backend if valid_host

    # Haproxy Stats
    stats           enable
    stats           uri /haproxy-stats
    stats           refresh 10s
    stats           http-request auth realm Stats unless is_auth

backend api_backend
    mode            http
    http-request    set-path "%[path,regsub(^/api/?,/)]"
    server          api tasks.api:${API_PORT} check inter 5s rise 2 fall 3

backend client_backend
    mode            http
    server          client tasks.client:${CLIENT_PORT} check inter 5s rise 2 fall 3

backend prometheus_backend
    mode            http

    acl             is_auth http_auth(basic-auth)
    http-request    auth realm Prometheus if !is_auth

    server          prometheus tasks.prometheus:9090 check inter 5s rise 2 fall 3

backend grafana_backend
    mode            http

    server          grafana tasks.grafana:3000 check inter 5s rise 2 fall 3
